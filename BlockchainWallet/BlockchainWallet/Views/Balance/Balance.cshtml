@model BlockchainWallet.Models.Dto.BalanceDto

@{
    ViewData["Title"] = "Balance";
}


<script>

    app.url = {};
    app.bool = {};
    app.id = {};
    app.id.account = '@Html.IdFor(x => x.Account)';
    app.bool.shouldCheckBalance = '@Model.ShouldCheckBalance.ToString().ToLower()' === 'true';
    app.url.getBalance =
        '@Url.Action(nameof(BalanceController.BalanceAjax).RemoveControllerSuffix(), nameof(BalanceController).RemoveControllerSuffix())';
    

</script>

<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Balance" asp-controller="Balance" method="post">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.ShouldCheckBalance)

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row">
                <div class="col col-sm-12 text-center">
                    <h3>Blockchain Wallet - Online</h3>
                </div>
    
                <div class="col col-sm-12">
                    <br/>
                    <div class="row">
                        <div class="col col-sm-6">
                            <div class="row">
                                <div class="col col-sm-2">
                                    <label>Account: </label>
                                </div>
                                <div class="col col-sm-9">
                                    @*<input class="form-control" type="text" name="account" value="9a9f082f37270ff54c5ca4204a0e4da6951fe917" />*@
                                    @Html.TextBoxFor(x => x.Account, new { id= "account-address", @class= "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col col-sm-6 text-right">
                            <div class="row">
                                <div class="col col-sm-6 offset-3">
                                    @*<input class="form-control text-right" id="user-balance" type="text" name="balance" value="" readonly="readonly" />*@
                                    @Html.TextBoxFor(x => x.Amount, new { id = "user-balance", @class = "form-control text-right", @readonly = "readonly" })
                                </div>
                                <div class="col col-sm-3">
                                    <input id="btn-get-balance" class="btn btn-info" type="submit" value="Get Balance"/>
                                </div>
                            </div>
                
                
                        </div>
                    </div>
        
                </div>

            </div>
        </form>
    </div>
    
    
    <div class="col-md-12 text-center loading-logo" style="display: none">
        <span>Loading ...</span>
        <br/>
        <br/>
        @Html.Partial("_LoadingLogo")
    </div>
</div>

<script src="~/js/getBalance.js"></script>

@*@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}*@
